/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    ext {
        grpcVersion = "1.20.0"
        protocVersion = "3.7.1"
        lombokVersion = "1.16.20"
        grpcStarterVersion = "2.4.0.RELEASE"
        springBootVersion =  "2.1.6.RELEASE"
        protobufGradlePluginVersion = "0.8.9"
        gradleDownloadTaskVersion = "4.0.0"
        protosVersion = "1.3.2"
        graphqlStarterVersion = "5.10.0"
        futuresExtraVersion = "4.2.0"
        pgvVersion = "0.2.0"
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufGradlePluginVersion}"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("de.undercouch:gradle-download-task:${gradleDownloadTaskVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'de.undercouch.download'

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("net.devh:grpc-client-spring-boot-starter:${grpcStarterVersion}")

    compile("com.google.protobuf:protobuf-java-util:${protocVersion}")

    // 配置protobuf的文件位置
    protobuf files("../protos")

    compileOnly("org.projectlombok:lombok:${lombokVersion}")

    compile ("com.graphql-java-kickstart:graphql-spring-boot-starter:${graphqlStarterVersion}"){
        exclude(group: "com.graphql-java-kickstart", module: "graphql-java-tools")
    }

    compile("com.graphql-java-kickstart:graphql-java-tools:5.6.2-SNAPSHOT")

    // to embed Playground tool
    runtime "com.graphql-java-kickstart:playground-spring-boot-starter:${graphqlStarterVersion}"

    // to embed Voyager tool
    runtime "com.graphql-java-kickstart:voyager-spring-boot-starter:${graphqlStarterVersion}"

    compile "com.spotify:futures-extra:${futuresExtraVersion}"
    compile "io.envoyproxy.protoc-gen-validate:pgv-java-stub:${pgvVersion}"
    compile "io.envoyproxy.protoc-gen-validate:pgv-java-grpc:${pgvVersion}"
    compile 'com.hubspot.jackson:jackson-datatype-protobuf:0.9.11-jackson2.9'

    // testing facilities
    testCompile "com.graphql-java-kickstart:graphql-spring-boot-starter-test:${graphqlStarterVersion}"

    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompile "junit:junit:4.12"
    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        javapgv {
            artifact = "io.envoyproxy.protoc-gen-validate:protoc-gen-validate:${pgvVersion}"
        }
    }

    generateProtoTasks {
        all()*.plugins {
            javapgv {
                option "lang=java"
            }
            grpc {}
        }
    }
}


sourceSets {
    main {
        resources {
            srcDir '../schema' //资源目录
        }
    }
}


idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/javapgv")
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc")
        sourceDirs += file("build/resources/main")
        // fix redefine graphql content
        sourceDirs -= file("build/resources/main/graphql")
    }
}

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven {
        credentials {
            username 'KwPAxj'
            password 'KKnP3maIK3'
        }
        url 'https://repo.rdc.aliyun.com/repository/73792-release-PXkyIy/'
    }
    maven {
        credentials {
            username 'KwPAxj'
            password 'KKnP3maIK3'
        }
        url 'https://repo.rdc.aliyun.com/repository/73792-snapshot-z4fvGZ/'
    }
    mavenCentral()
}

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion") }
}
